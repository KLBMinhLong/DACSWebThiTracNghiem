// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThiTracNghiem.Data;

#nullable disable

namespace ThiTracNghiem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250413042142_AddChuDeAndCauHoi")]
    partial class AddChuDeAndCauHoi
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CauHoi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChuDeId")
                        .HasColumnType("int");

                    b.Property<string>("DapAnA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DapAnB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DapAnC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DapAnD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DapAnDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChuDeId");

                    b.ToTable("CauHois");
                });

            modelBuilder.Entity("ChuDe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenChuDe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChuDes");
                });

            modelBuilder.Entity("ThiTracNghiem.Models.TaiKhoan", b =>
                {
                    b.Property<string>("TenTaiKhoan")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AnhDaiDienUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ThoiGianTao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TrangThaiKhoa")
                        .HasColumnType("bit");

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TenTaiKhoan");

                    b.ToTable("TaiKhoans");
                });

            modelBuilder.Entity("CauHoi", b =>
                {
                    b.HasOne("ChuDe", "ChuDe")
                        .WithMany("CacCauHoi")
                        .HasForeignKey("ChuDeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChuDe");
                });

            modelBuilder.Entity("ChuDe", b =>
                {
                    b.Navigation("CacCauHoi");
                });
#pragma warning restore 612, 618
        }
    }
}
